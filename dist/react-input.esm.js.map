{"version":3,"file":"react-input.esm.js","sources":["../src/with-composition.tsx","../src/input.tsx","../src/textarea.tsx","../src/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nexport interface Props {\n  value?: string;\n  onChange: (x: string) => void;\n}\n\nconst withComposition = (WrappedComponent: any) => {\n  const Inner: React.FC<Props> = props => {\n    const [composing, setComposing] = useState(false);\n    const [text, setText] = useState(props.value || '');\n    const onComposition = (e: any) => {\n      const type = e.type;\n      const value = e.target.value;\n\n      if (type === 'compositionstart') {\n        setComposing(true);\n      } else if (type === 'compositionend') {\n        setComposing(false);\n        setText(value);\n        props.onChange(value);\n      }\n    };\n    const onChange = (e: any) => {\n      setText(e.target.value);\n\n      if (!composing) {\n        props.onChange(e.target.value);\n      }\n    };\n\n    return React.createElement(\n      WrappedComponent,\n      Object.assign({}, props, {\n        value: text,\n        onChange: onChange,\n        onCompositionStart: onComposition,\n        onCompositionEnd: onComposition,\n      })\n    );\n  };\n\n  return Inner;\n};\n\nexport default withComposition;\n","import withComposition from './with-composition';\n\nconst Input = withComposition('input');\n\nexport default Input;\n","import withComposition from './with-composition';\n\nconst Textarea = withComposition('textarea');\n\nexport default Textarea;\n","import * as React from 'react';\nexport { default as withComposition } from './with-composition';\nexport { default as Input } from './input';\nexport { default as Textarea } from './textarea';\n\nexport const Thing = () => {\n  return <div>hello Input</div>;\n};\n"],"names":["withComposition","WrappedComponent","Inner","props","useState","composing","setComposing","value","text","setText","onComposition","e","type","target","onChange","React","createElement","Object","assign","onCompositionStart","onCompositionEnd","Input","Textarea","Thing"],"mappings":";;AAOA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,gBAAD;AACtB,MAAMC,KAAK,GAAoB,SAAzBA,KAAyB,CAAAC,KAAK;oBACAC,QAAQ,CAAC,KAAD;QAAnCC;QAAWC;;qBACMF,QAAQ,CAACD,KAAK,CAACI,KAAN,IAAe,EAAhB;QAAzBC;QAAMC;;AACb,QAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD;AACpB,UAAMC,IAAI,GAAGD,CAAC,CAACC,IAAf;AACA,UAAML,KAAK,GAAGI,CAAC,CAACE,MAAF,CAASN,KAAvB;;AAEA,UAAIK,IAAI,KAAK,kBAAb,EAAiC;AAC/BN,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAFD,MAEO,IAAIM,IAAI,KAAK,gBAAb,EAA+B;AACpCN,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAG,QAAAA,OAAO,CAACF,KAAD,CAAP;AACAJ,QAAAA,KAAK,CAACW,QAAN,CAAeP,KAAf;AACD;AACF,KAXD;;AAYA,QAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACH,CAAD;AACfF,MAAAA,OAAO,CAACE,CAAC,CAACE,MAAF,CAASN,KAAV,CAAP;;AAEA,UAAI,CAACF,SAAL,EAAgB;AACdF,QAAAA,KAAK,CAACW,QAAN,CAAeH,CAAC,CAACE,MAAF,CAASN,KAAxB;AACD;AACF,KAND;;AAQA,WAAOQ,cAAK,CAACC,aAAN,CACLf,gBADK,EAELgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBf,KAAlB,EAAyB;AACvBI,MAAAA,KAAK,EAAEC,IADgB;AAEvBM,MAAAA,QAAQ,EAAEA,QAFa;AAGvBK,MAAAA,kBAAkB,EAAET,aAHG;AAIvBU,MAAAA,gBAAgB,EAAEV;AAJK,KAAzB,CAFK,CAAP;AASD,GAhCD;;AAkCA,SAAOR,KAAP;AACD,CApCD;;ACLA,IAAMmB,KAAK;AAAA;AAAGrB,eAAe,CAAC,OAAD,CAA7B;;ACAA,IAAMsB,QAAQ;AAAA;AAAGtB,eAAe,CAAC,UAAD,CAAhC;;ICGauB,KAAK,GAAG,SAARA,KAAQ;AACnB,SAAOR,aAAA,MAAA,MAAA,eAAA,CAAP;AACD,CAFM;;;;"}